import cv2
import math
import time
cap = cv2.VideoCapture('video_2.mp4')
x2 =0
y2 =0
time2=0
while True:
    succed, img = cap.read()
    if not succed:
        break
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    width = img.shape[1]
    height = img.shape[0]
    square_x = width // 2 - 100
    square_y = height // 2 - 100
    square_top_left = (square_x, square_y)
    square_bottom_right = (square_x + 200, square_y + 200)
    cv2.rectangle(img, square_top_left, square_bottom_right, (0, 255, 0), thickness=3)
    faces = cv2.CascadeClassifier('faces.xml')
    results = faces.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=55)
    if len(results) > 0:
        for (x, y, w, h) in results [0:1]:
            center_x = x + w // 2
            center_y = y + h // 2
            direction = ''
            if (square_x < center_x <square_x + 200 and square_y < center_y < square_y + 200):
                color = (0, 255, 0)
            else:
                color = (0, 0, 255)
                if center_x < square_top_left[0]:
                    direction += "LEFT "
                if center_x > square_bottom_right[0]:
                    direction += "RIGHT "
                if center_y < square_top_left[1]:
                    direction += "UP "
                if center_y > square_bottom_right[1]:
                    direction += "DOWN "
            cv2.circle(img, (center_x, center_y), 5, color, -1)
            cv2.putText(img, direction, (0,60), cv2.FONT_HERSHEY_TRIPLEX, 1, (0, 0, 255), 1)

            time1 = time.time()
            dtime = time1 - time2
            distance = math.sqrt((x2-center_x)**2 + (y2-center_y)**2)/dtime
            distance = round (distance, 3)
            time2=time1
            x2 = center_x
            y2 = center_y
            cv2.putText(img, str(distance), (0,30), cv2.FONT_HERSHEY_TRIPLEX, 1, (255, 0, 0), 1)

    cv2.imshow("Object tracking", img)
    if cv2.waitKey(1) and 0xFF==ord('a'):
        break

cv2.waitKey(0)
